CREATE TABLE account(
	uid SERIAL PRIMARY KEY,
	email TEXT,
	upassword TEXT NOT NULL,
	uname TEXT,
	utype CHAR NOT NULL,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
CREATE TABLE course(
	cid SERIAL PRIMARY KEY,
	uid INT NOT NULL,
	name TEXT NOT NULL,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	FOREIGN KEY (uid) REFERENCES account ON DELETE CASCADE
);
CREATE TABLE post(
	pid SERIAL PRIMARY KEY,
	uid INT NOT NULL,
	cid INT NOT NULL,
	ptype CHAR NOT NULL,
	content TEXT NOT NULL,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	FOREIGN KEY (uid) REFERENCES account ON DELETE CASCADE,
	FOREIGN KEY (cid) REFERENCES course ON DELETE CASCADE
);
CREATE TABLE endorses_post(
	uid INT,
	pid INT,
	PRIMARY KEY (uid, pid),
	FOREIGN KEY (uid) REFERENCES account ON DELETE CASCADE,
	FOREIGN KEY (pid) REFERENCES post ON DELETE CASCADE
);
CREATE TABLE reply_to(
	replyid INT,
	originalid INT,
	PRIMARY KEY (replyid, originalid),
	FOREIGN KEY (replyid) REFERENCES post(pid) ON DELETE CASCADE,
	FOREIGN KEY (originalid) REFERENCES post(pid) ON DELETE CASCADE
);
CREATE TABLE temp_password(
	uid INT PRIMARY KEY,
	pbody TEXT NOT NULL,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	FOREIGN KEY (uid) REFERENCES account ON DELETE CASCADE
);
CREATE TABLE in_course(
	uid INT NOT NULL,
	cid INT NOT NULL,
	PRIMARY KEY (uid, cid),
	FOREIGN KEY (uid) REFERENCES account ON DELETE CASCADE,
	FOREIGN KEY (cid) REFERENCES course ON DELETE CASCADE
);